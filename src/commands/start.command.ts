// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { Context, Telegraf } from "telegraf";
import { IBotContext } from "../context/context.interface";
import { Command } from "./command.class";
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import axios from "axios";

export class StartCommand extends Command {
  aboutBot: string[] = [];
  chooseTour: string[] = [];
  messageText: string = "";
  chatId: number | undefined;
  messageTextBudget: number | undefined ;
  webAppUrl: string = 'https://lucky-brigadeiros-dd2d36.netlify.app/'

  constructor(bot: Telegraf<IBotContext>) {
    super(bot);
  }
  
  // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  handle(): void {
    this.bot.start((ctx) => {
      console.log(ctx.from.first_name);
      console.log(ctx.from.username);
      this.aboutBot = [
        `–ó–¥—Ä—Å—Ç–≤—É–π—Ç–µ ${ctx.from.first_name},
            
–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢—É—Ä–ê–≥–µ–Ω—Å—Ç–≤–æ Caravan Tourizm, 

–Ø —è–≤–ª—è—é—Å—å –≤–∞—à–∏–º –¢—É—Ä–°–æ–ø—Ä–æ–≤–∞–¥–∏—Ç–µ–ª–µ–º –æ—Å–Ω–æ–≤–∞–Ω–æ–º –Ω–∞ –ò—Å—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–º –ò–Ω—Ç–µ–ª–µ–∫—Ç–µ –ø–µ—Ä–≤–æ–º –≤ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ`,
      ];
      ctx.reply(`${this.aboutBot}`, {
          reply_markup: {
            inline_keyboard: [
                /* One button */
                [ { text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç—É—Ä—ã ‚òÄÔ∏è üèñ", web_app: {url: this.webAppUrl} }], [{ text: "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ—Ä—è—á–∏–µ —Ç—É—Ä—ã üî•", web_app: {url: this.webAppUrl} } ],
                
                /* Also, we can have URL buttons. */
                [ { text: "–°–¥–µ–ª–∞—Ç —Å–µ–±–µ —Ç—É—Ä —Å –ø–æ–º–æ—â—å—é –ò–ò ü§ñ", callback_data: 'makeForAi' } ]
            ],
          }   
      });
      console.log(ctx.reply);
    });

    this.bot.action("makeForAi", async (ctx) => {
      ctx.sendMessage("–ó–∞–ø–∏—à–∏—Ç–µ –∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è?")
      
    })
    this.bot.command('senddata', async (ctx) => {
      try {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
        const groupId = '-4074004517';
        const message = '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ‚úÖ';
        console.log('Data to send succes‚úÖ')
        await ctx.telegram.sendMessage(groupId, message);
        ctx.reply('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥—Ä—É–ø–ø—É‚úÖ!');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
      }
    });
    // async function queryBudget() {

    // }
    this.bot.on('message', async (ctx) => {
      const message = ctx.message;
      if (message && 'text' in message) {
        const messageText = message.text;
        console.log('–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:', messageText);
        if (!this.messageText) {
          this.messageText = messageText;
          ctx.sendMessage("–ö–∞–∫–æ–π —É –≤–∞—Å –±—é–¥–∂–µ—Ç –≤ $?")
        } else if (!this.messageTextBudget) {
          const messageBudget = Number.parseInt(messageText);
          if (messageBudget) {
            console.log('–¢–µ–∫—Å—Ç budget:', messageBudget);
            this.messageTextBudget = messageBudget;
            if (messageBudget < 400) {
              console.log("Not enough");
              ctx.sendMessage('–≠—Ç–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üò¢');
            } else {
              ctx.sendMessage('–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ üòÅ');
              console.log("Good");
              // –í–∞—à–∏ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ messageText –∏ messageTextBudget
            }
          }
        }
      } else {
        console.log("Not found text");
      }
    });

    
  }
}


